Фиксируем исходное состояние кластера и убеждаемся в синхронности реплик

# patronictl -c /etc/patroni/patroni.yml list
+ Cluster: pg16-cluster (7503063564493600161) -----------+----+-----------+
| Member          | Host           | Role    | State     | TL | Lag in MB |
+-----------------+----------------+---------+-----------+----+-----------+
| red8-pg16-node1 | 192.168.122.10 | Leader  | running   | 15 |           |
| red8-pg16-node2 | 192.168.122.20 | Replica | streaming | 15 |         0 |
| red8-pg16-node3 | 192.168.122.30 | Replica | streaming | 15 |         0 |
+-----------------+----------------+---------+-----------+----+-----------+

postgres=# SELECT * FROM pg_stat_replication;
pid |usesysid|usename   |client_addr   |client_hostname|state    |sync_state|reply_time                   |
----+--------+----------+--------------+---------------+---------+----------+-----------------------------+
1038|   16388|replicator|192.168.122.20|red8-pg16-node2|streaming|async     |2025-05-15 17:50:07.658 +0300|
1045|   16388|replicator|192.168.122.30|red8-pg16-node3|streaming|async     |2025-05-15 17:50:07.636 +0300|

Тестирование отказоустойчивости

Ручная симуляция сбоев

Сценарий 1: Остановка сервиса Patroni на мастере
# systemctl restart patroni.service

# patronictl -c /etc/patroni/patroni.yml list
+ Cluster: pg16-cluster (7503063564493600161) -----------+----+-----------+
| Member          | Host           | Role    | State     | TL | Lag in MB |
+-----------------+----------------+---------+-----------+----+-----------+
| red8-pg16-node1 | 192.168.122.10 | Replica | streaming | 16 |         0 |
| red8-pg16-node2 | 192.168.122.20 | Replica | streaming | 16 |         0 |
| red8-pg16-node3 | 192.168.122.30 | Leader  | running   | 16 |           |
+-----------------+----------------+---------+-----------+----+-----------+

postgres=# SELECT * FROM pg_stat_replication;

SELECT pid,usesysid,usename,client_addr,client_hostname,state,sync_state,reply_time FROM pg_stat_replication;
